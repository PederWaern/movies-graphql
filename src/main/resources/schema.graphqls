type Link {
    id: ID
    url: String
    description: String
}

type Query {
    allLinks: [Link]
    allMovies: [Movie]
    getMovieById(id: String!): Movie!
    allUsers: [User]
    allRatings: [Rating]
}

type Movie {
    id: String
    voteCount: Int
    video: Boolean
    voteAverage: Float
    title: String
    popularity: Float
    posterPath: String
    originalLanguage: String
    originalTitle : String
    genreIds : [Int]
    backdropPath: String
    adult: Boolean
    overview: String
    releaseDate: String
}

type Rating {
   id: String!
   rating: Int!
   comment: String
}

type User {
   id: ID!
   name: String
   ratings: [Rating]
}

type Mutation {
    createLink(url: String!, description: String!): Link
    createUser(name: String!): User
}

schema {
    query: Query
    mutation: Mutation
}
